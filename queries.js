var sqlqueries = {"01_beginner - 00_comment":"-- single line comment\r\n\r\n\/* comments in SQL can \r\n   also be multiline *\/\r\n","01_beginner - 01_select":"\/* Query all entries from the column RegionDescription of the Region table *\/\r\n\r\nSELECT RegionDescription FROM Region\r\n","01_beginner - 02_where":"\/* Query entries from multiple columns of the Order table where ShipCountry is Germany and ShipPostalCode is 68306 *\/\r\n\r\nSELECT Id, ShipName, OrderDate FROM [Order] WHERE ShipCountry = 'Germany' AND ShipPostalCode = '68306'","01_beginner - 03_limit":"\/* Query 10 entries from multiple columns of the Order table *\/\r\n\r\nSELECT Id, ShipName, OrderDate FROM [Order] LIMIT 0,10","01_beginner - 04_orderby":"\/* Query 10 entries from multiple columns of the Order table ordered by OrderDate descending *\/\r\n\r\nSELECT Id, ShipName, OrderDate FROM [Order] ORDER BY OrderDate DESC LIMIT 0,10","01_beginner - 05_groupby":"\/* Query ShipCountry and Orders per ShipCountry from the Order table *\/\r\n\r\nSELECT ShipCountry, COUNT(*) as Orders FROM [Order] GROUP BY ShipCountry ORDER BY COUNT(*) DESC","01_beginner - 06_strftime":"\/* Query ShipCountry, year of the order (via STRFTIME) and number of orders from the Order table *\/\r\n\r\nSELECT \r\n\tShipCountry, \r\n\tSTRFTIME('%Y', OrderDate) as OrderYear, \r\n\tCOUNT(*) as Orders \r\nFROM [Order] \r\nGROUP BY\r\n\tShipCountry, \r\n\tSTRFTIME('%Y', OrderDate)\r\nORDER BY \r\n\tSTRFTIME('%Y', OrderDate) DESC,\r\n\tCOUNT(*) DESC","01_beginner - 07_case":"\/* Query all entries from the Order table and add a new column with the value DACH if the ShipCountry value is Germany, Austria or Switzerland *\/\r\n\r\nSELECT \r\n\t*, \r\n\tCASE \r\n\tWHEN ShipCountry IN ('Germany', 'Austria', 'Switzerland') THEN 'DACH'\r\n\tELSE 'non-DACH' \r\n\tEND AS DACH\r\nFROM [Order] ","01_beginner - 08_case2":"\/* Query number of orders by year in DACH and non-DACH area *\/\r\n\r\nSELECT \r\n\tSTRFTIME('%Y', OrderDate) as OrderYear,\r\n\tCASE \r\n\tWHEN ShipCountry IN ('Germany', 'Austria', 'Switzerland') THEN 'DACH'\r\n\tELSE 'non-DACH' \r\n\tEND AS DACH,\r\n\tCOUNT(*) as Orders \r\nFROM [Order] \r\nGROUP BY\r\n\tSTRFTIME('%Y', OrderDate),\r\n\tCASE \r\n\tWHEN ShipCountry IN ('Germany', 'Austria', 'Switzerland') THEN 'DACH'\r\n\tELSE 'non-DACH' \r\n\tEND","02_advanced - 00_create":"\/* Create a temporary table with the content of the subsequent query *\/\r\n\r\nCREATE TEMPORARY TABLE OrdersByYearAndArea AS \r\nSELECT \r\n\tSTRFTIME('%Y', OrderDate) as OrderYear,\r\n\tCASE \r\n\tWHEN ShipCountry IN ('Germany', 'Austria', 'Switzerland') THEN 'DACH'\r\n\tELSE 'non-DACH' \r\n\tEND AS DACH,\r\n\tCOUNT(*) as Orders \r\nFROM [Order] \r\nGROUP BY\r\n\tSTRFTIME('%Y', OrderDate),\r\n\tCASE \r\n\tWHEN ShipCountry IN ('Germany', 'Austria', 'Switzerland') THEN 'DACH'\r\n\tELSE 'non-DACH' \r\n\tEND","02_advanced - 01_insert":"\/* Insert values into the table OrdersByYearAndArea *\/\r\n\r\nINSERT INTO OrdersByYearAndArea (OrderYear,DACH,Orders) VALUES('2014','DACH',100),('2014','non-DACH',50);","02_advanced - 02_update":"\/* Update all rows in OrdersByYearAndArea table, reduce Orders value by 1 *\/\r\n\r\nUPDATE OrdersByYearAndArea SET Orders = Orders-1\r\n","02_advanced - 03_delete":"\/* Remove rows where OrderYear value is 1996 *\/\r\n\r\nDELETE FROM OrdersByYearAndArea WHERE OrderYear = '1996'","02_advanced - 04_join":"\/* Join data from the Category table to the Product table *\/\r\n\r\nSELECT  \r\n\tProduct.Id, \r\n\tProduct.ProductName, \r\n\tCategory.CategoryName, \r\n\tCategory.Description as [CategoryDescription]\r\nFROM [Product]\r\nLEFT JOIN [Category] on Product.CategoryId = Category.id","02_advanced - 05_join2":"\/* Join data from the OrderDetail table to the Order table *\/\r\n\r\nSELECT\r\n\tCOUNT(DISTINCT [Order].Id) as Orders,\r\n\tCOUNT(*) as OrderLines\r\nFROM [Order]\r\nJOIN [OrderDetail] on [Order].ID = [OrderDetail].OrderID ","02_advanced - 06_join3":"\/* Join data from the Order table and Customer to the OrderDetail table *\/\r\n\r\nSELECT \r\n\tc.CompanyName              AS Customer, \r\n\tc.Country                  AS Country, \r\n\tCOUNT(DISTINCT od.OrderId) AS Orders,\r\n\tCOUNT(od.Id)               AS OrderLines\r\nFROM OrderDetail     AS od\r\nLEFT JOIN [Order]    AS o ON o.Id = od.orderid\r\nLEFT JOIN [Customer] AS c ON o.customerid = c.Id\r\nGROUP BY c.CompanyName, c.Country\r\nORDER BY COUNT(od.Id) DESC ","02_advanced - 07_rownumber":"\/* Select top 3 products for each customer by sum of sales quantity *\/\r\n\r\nSELECT * FROM (\r\nSELECT \r\n\tc.CompanyName              AS Customer, \r\n    od.ProductId               AS ProductId,\r\n\tp.ProductName              AS Product,\r\n\tSUM(od.Quantity)           AS Quantity,\r\n\tROW_NUMBER() OVER(\r\n\t\tPARTITION BY c.CompanyName\r\n\t\tORDER BY SUM(od.Quantity) DESC\r\n\t) AS Ranking\r\nFROM OrderDetail     AS od\r\nLEFT JOIN [Order]    AS o ON o.Id = od.orderid\r\nLEFT JOIN [Customer] AS c ON o.customerid = c.Id\r\nLEFT JOIN [Product]  AS p ON od.ProductId = p.Id\r\nGROUP BY c.CompanyName, od.ProductId, p.ProductName\r\n) ProductRankingByCustomer\r\nWHERE Ranking < 4","02_advanced - 08_rownumber2":"\/* Select top 3 customers for each product by sum of sales quantity *\/\r\n\r\nSELECT * FROM (\r\nSELECT \r\n    od.ProductId               AS ProductId,\r\n\tp.ProductName              AS Product,\r\n\tc.CompanyName              AS Customer, \r\n\tSUM(od.Quantity)           AS Quantity,\r\n\tROW_NUMBER() OVER(\r\n\t\tPARTITION BY od.ProductId\r\n\t\tORDER BY SUM(od.Quantity) DESC\r\n\t) AS Ranking\r\nFROM OrderDetail     AS od\r\nLEFT JOIN [Order]    AS o ON o.Id = od.orderid\r\nLEFT JOIN [Customer] AS c ON o.customerid = c.Id\r\nLEFT JOIN [Product]  AS p ON od.ProductId = p.Id\r\nGROUP BY c.CompanyName, od.ProductId, p.ProductName\r\n) ProductRankingByCustomer\r\nWHERE Ranking < 4","03_dates - 00_date":"\/* Output different dates - today, current first day of the month, end of month, first of may 2022 *\/\n\nSELECT \n    date('now') as \"today\",\n    date('now','start of month') as \"start of month\", \n    date('now','start of month','+1 month') as \"end of month\",\n    date('2022-05-01') as \"first of may 2022\"\n","03_dates - 01_timeperiods":"\/* Output of different time windows with description *\/\n\nSELECT \n  'CM' as \"period\", 'current month' as \"description\",\n  date('now','start of month') as \"from\", \n  date('now','start of month','+1 month','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'YTM' as \"period\", 'year to month' as \"description\",\n  date('now','start of year') as \"from\", \n  date('now','start of month','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'YTD' as \"period\", 'year to date' as \"description\",\n  date('now','start of year') as \"from\", \n  date('now','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'MTD' as \"period\", 'month to date' as \"description\",\n  date('now','start of month') as \"from\", \n  date('now','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'SMPY' as \"period\", 'same month previous year' as \"description\",\n  date('now','start of month','-1 year') as \"from\", \n  date('now','start of month','+1 month','-1 day','-1 year') as \"till\"  \n\nUNION ALL\n\nSELECT \n  'PM' as \"period\", 'previous month' as \"description\",\n  date('now','start of month','-1 month') as \"from\", \n  date('now','start of month','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'PY' as \"period\", 'previous year' as \"description\",\n  date('now','start of year','-1 year') as \"from\", \n  date('now','start of year','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'PMPY' as \"period\", 'previous month in previous year' as \"description\",\n  date('now','start of month','-1 month','-1 year') as \"from\", \n  date('now','start of month','-1 day','-1 year') as \"till\"\n\nUNION ALL\n\nSELECT \n  '365' as \"period\", 'last 365 days' as \"description\",\n  date('now','-366 days') as \"from\", \n  date('now','-1 day') as \"till\";\n","03_dates - 02_calendar":"\/* create a table with dates from 2 years past till 1 year future *\/\n\nCREATE TEMPORARY TABLE IF NOT EXISTS calendar (\n  \"date\" date UNIQUE NOT NULL,\n  \"dow\" INT NOT NULL\n);\n\nINSERT OR ignore INTO \"calendar\"\nSELECT * FROM (\n  WITH RECURSIVE dates(d) AS (\n    VALUES(date('now','-2 year'))\n    UNION ALL\n    SELECT date(d, '+1 day') FROM dates WHERE d < date('now','+1 year')\n  )\n  SELECT d, (CAST(strftime('%w', d) AS INT) + 6) % 7 AS \"dow\" FROM dates\n);\n\nSELECT * FROM \"calendar\" \nORDER BY \"date\" DESC\nLIMIT 0,100;","03_dates - 03_groupbymonth":"\/* select number of days and weekdays of each month in current year *\/\n\nCREATE TEMPORARY TABLE IF NOT EXISTS calendar (\n  \"date\" date UNIQUE NOT NULL,\n  \"dow\" INT NOT NULL\n);\n\nINSERT OR ignore INTO \"calendar\"\nSELECT * FROM (\n  WITH RECURSIVE dates(d) AS (\n    VALUES(date('now','-2 year'))\n    UNION ALL\n    SELECT date(d, '+1 day') FROM dates WHERE d < date('now','+1 year')\n  )\n  SELECT d, (CAST(strftime('%w', d) AS INT) + 6) % 7 AS \"dow\" FROM dates\n);\n\nSELECT \n  substr('JanFebMarAprMayJunJulAugSepOctNovDec', 1 + 3*strftime('%m', \"date\"), -3) as \"Month\",\n  COUNT(*) as \"Days\",\n  COUNT(CASE WHEN \"calendar\".\"dow\" < 5 THEN 1 END) as \"Weekdays\"\nFROM \"calendar\"\nWHERE strftime('%Y', \"date\") = strftime('%Y', date('now'))\nGROUP BY strftime('%m', \"date\")\nORDER BY strftime('%m', \"date\") ASC;\n","03_dates - 04_joincalendar":"\/* combine \"timeperiods\" example with \"calendar\" example *\/\n\nCREATE TEMPORARY TABLE IF NOT EXISTS calendar (\n  \"date\" date UNIQUE NOT NULL,\n  \"dow\" INT NOT NULL\n);\n\nINSERT OR ignore INTO \"calendar\"\nSELECT * FROM (\n  WITH RECURSIVE dates(d) AS (\n    VALUES(date('now','-2 year'))\n    UNION ALL\n    SELECT date(d, '+1 day') FROM dates WHERE d < date('now','+1 year')\n  )\n  SELECT d, (CAST(strftime('%w', d) AS INT) + 6) % 7 AS \"dow\" FROM dates\n);\n\nSELECT \n  \"period\", \n  \"description\", \n  \"from\", \n  \"till\", \n  CAST (JulianDay(\"till\") - JulianDay(\"from\") as Integer) as \"days\",\n  COUNT(CASE WHEN \"calendar\".\"dow\" < 5 THEN 1 END) as \"weekdays\"\nFROM (\n\nSELECT \n  'CM' as \"period\", 'current month' as \"description\",\n  date('now','start of month') as \"from\", \n  date('now','start of month','+1 month','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'YTM' as \"period\", 'year to month' as \"description\",\n  date('now','start of year') as \"from\", \n  date('now','start of month','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'YTD' as \"period\", 'year to date' as \"description\",\n  date('now','start of year') as \"from\", \n  date('now','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'MTD' as \"period\", 'month to date' as \"description\",\n  date('now','start of month') as \"from\", \n  date('now','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'SMPY' as \"period\", 'same month previous year' as \"description\",\n  date('now','start of month','-1 year') as \"from\", \n  date('now','start of month','+1 month','-1 day','-1 year') as \"till\"  \n\nUNION ALL\n\nSELECT \n  'PM' as \"period\", 'previous month' as \"description\",\n  date('now','start of month','-1 month') as \"from\", \n  date('now','start of month','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'PY' as \"period\", 'previous year' as \"description\",\n  date('now','start of year','-1 year') as \"from\", \n  date('now','start of year','-1 day') as \"till\"\n\nUNION ALL\n\nSELECT \n  'PMPY' as \"period\", 'previous month in previous year' as \"description\",\n  date('now','start of month','-1 month','-1 year') as \"from\", \n  date('now','start of month','-1 day','-1 year') as \"till\"\n\nUNION ALL\n\nSELECT \n  '365' as \"period\", 'last 365 days' as \"description\",\n  date('now','-366 days') as \"from\", \n  date('now','-1 day') as \"till\"\n) x\nLEFT JOIN \"calendar\" ON \"calendar\".\"date\" BETWEEN \"x\".\"from\" AND \"x\".\"till\"\nGROUP BY \"period\",  \"description\",  \"from\",  \"till\";\n"};
